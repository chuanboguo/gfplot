% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpue-index-tweedie.R
\name{fit_cpue_index_tweedie}
\alias{fit_cpue_index_tweedie}
\alias{predict_cpue_index_tweedie}
\alias{tidy_cpue_index_coefs_tweedie}
\title{Commercial CPUE index standardization (Tweedie version)}
\usage{
fit_cpue_index_tweedie(dat, formula = cpue ~ year_factor)

predict_cpue_index_tweedie(object, center = FALSE)

tidy_cpue_index_coefs_tweedie(object, include_scale_pars = FALSE,
  re_name = c("RE 1", "RE 2"))
}
\arguments{
\item{dat}{A data frame to fit. Might be from \code{\link[=tidy_cpue_index]{tidy_cpue_index()}} or
\code{\link[=tidy_cpue_historic]{tidy_cpue_historic()}}.}

\item{formula}{Formula A formula with up to 2 random intercepts in lme4
syntax. Must contain a predictor named \code{year_factor} that contains the year
as a factor.}

\item{object}{Output from \code{\link[=fit_cpue_index_tweedie]{fit_cpue_index_tweedie()}}.}

\item{center}{Should the predictions be centered by dividing by the geometric
mean?}

\item{include_scale_pars}{Logical: include observation CV and random effect
like standard deviations in parameter plot?}

\item{re_name}{Names for the possible random intercepts. Should start with
\code{RE}.}
}
\description{
\itemize{
\item \code{tidy_cpue_index_coefs_tweedie()} extracts coefficients from a CPUE
index standardization model
}
}
\examples{
\donttest{
set.seed(1)
d <- sim_cpue(n_years = 5, n_vessels = 6, n_samples = 10)
# assign factor levels with base as most common level:
d$vessel <- gfplot::f(d$vessel)
m1 <- fit_cpue_index_tweedie(d, cpue ~ year_factor + vessel)
plot_cpue_index_coefs(m1, type = "tweedie")

# Random intercepts for vessel:
m2 <- fit_cpue_index_tweedie(d, cpue ~ year_factor + (1 | vessel))
plot_cpue_index_coefs(m2, type = "tweedie", re_name = c("vessel", NA))

predict_cpue_index_tweedie(m2)

predict_cpue_index_tweedie(m2, center = FALSE) \%>\%
  plot_cpue_index()
}
}
