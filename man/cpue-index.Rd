% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpue-index.R
\name{fit_cpue_index}
\alias{fit_cpue_index}
\alias{predict_cpue_index}
\alias{plot_cpue_index}
\alias{tidy_cpue_index_coefs}
\alias{plot_cpue_index_coefs}
\alias{plot_cpue_index_jk}
\title{Commercial CPUE index standardization}
\usage{
fit_cpue_index(dat, formula_binomial = cpue ~ year_factor,
  formula_gamma = spp_catch/hours_fished ~ year_factor)

predict_cpue_index(object, center = FALSE)

plot_cpue_index(predicted_dat, all_models = TRUE)

tidy_cpue_index_coefs(object, include_scale_pars = FALSE)

plot_cpue_index_coefs(object, regex = c(", base_[a-z]+", ""),
  type = c("delta", "tweedie"), ...)

plot_cpue_index_jk(object, terms = c("f(month)", "f(vessel)",
  "f(locality)", "f(depth)", "f(latitude)"), return_data = FALSE)
}
\arguments{
\item{dat}{A data frame from \code{\link[=tidy_cpue_index]{tidy_cpue_index()}}, or a similarly
formatted data frame.}

\item{formula_binomial}{Formula for the binomial (presence-absence) model.
See details.}

\item{formula_gamma}{Formula for the Gamma (positive) model. See details.}

\item{object}{Model output from \code{\link[=fit_cpue_index]{fit_cpue_index()}}.}

\item{center}{Should the index be centered by subtracting the mean in link space?}

\item{predicted_dat}{Input data frame, for example from \code{\link[=predict_cpue_index]{predict_cpue_index()}}.}

\item{all_models}{Logical for whether to plot all models (\code{TRUE}) or just the
combined model (\code{FALSE}).}

\item{include_scale_pars}{Logical: include observation CV and random effect
like standard deviations in parameter plot?}

\item{regex}{A regular expression as a character vector of length 2 to
transform the coefficient names from something (element 1) to something
(element 2).}

\item{type}{Delta or Tweedie?}

\item{...}{Other arguments to pass to the tidy function.}

\item{terms}{A character vector of terms to jackknife out.}

\item{return_data}{Logical: should the data be returned?}
}
\description{
\itemize{
\item \code{fit_cpue_index()} fits a delta-Gamma commercial CPUE
standardization model
}

\itemize{
\item \code{predict_cpue_index()} predicts from a delta-Gamma
commercial CPUE standardization model
}

\itemize{
\item \code{plot_cpue_index()} plots a delta-Gamma commercial CPUE
standardization model
}

\itemize{
\item \code{tidy_cpue_index_coefs()} extracts coefficients from a CPUE
index standardization model
}

\itemize{
\item \code{plot_cpue_index_coefs()} plots coefficients from a CPUE index
standardization model
}

\itemize{
\item \code{plot_cpue_index_jk()} "jackknifes" out terms one by one to
test the sensitivity of the standardization model to any one term.
}
}
\details{
Formulas should be specified in the way a GLM formula would be specified in R
or as a GLMM with \strong{up to 2 random intercepts} would be specified in
\code{\link[lme4:lmer]{lme4::lmer()}}. E.g. \code{pos_catch ~ year_factor + (1 | vessel)} or
\code{cpue ~ year_factor + (1 | vessel) + (1 | locality)}. Your formula
\strong{must} have a predictor named \code{year_factor} for the other functions in this
package to interact with the output properly. The fixed effect components of
the binomial and Gamma components do not need to be the same, but the random
effect components must be the same.

Because of how the formula parsing is performed, you \strong{cannot} include any
operations in the response variable. For example, you can't use \code{catch/effort ~ year_factor}. Instead you must create a new column, e.g. \code{cpue} and use
that as the response: \code{cpue ~ year_factor}.

You may want to take advantage of the function \code{\link[gfplot:f]{gfplot::f()}} for conveniently
turning predictors into factors with their base level set to the most common
factor level and their factor names with consistent name lengths (e.g. '001',
'020').

The model is internally fitted with TMB. As a result, you will have to have a
C++ compiler installed to compile the models. On Windows, search for Rtools.

Note that for coefficients for predictors treated as factors, the
coefficients represent the difference from the base level factor. For
example, if January was the base month, month 02 represents the estimated
difference between February and January. The default setup of the function
\code{\link[gfplot:f]{gfplot::f()}} sets the reference level as the most common factor level.
}
\examples{
\donttest{
# A simulated example:
set.seed(1)
d <- sim_cpue()
d$cpue <- d$spp_catch / d$hours_fished
d$vessel <- f(d$vessel)

m <- fit_cpue_index(d,
  formula_binomial = pos_catch ~ year_factor + vessel,
  formula_gamma = cpue ~ year_factor + vessel
)

plot_cpue_index_coefs(m)

predict_cpue_index(m) \%>\%
  plot_cpue_index()

plot_cpue_index_jk(m, terms = "f(vessel)")
}
\donttest{
# An example with PBS data:
# (the data extraction will be slow)

d <- get_cpue_index(gear = "bottom trawl")
walleye <- tidy_cpue_index(d, "walleye pollock",
  area_grep_pattern = "5[CDE]+")

m <- fit_cpue_index(walleye)

plot_cpue_index_coefs(m)

predict_cpue_index(m) \%>\%
  plot_cpue_index()

plot_cpue_index_jk(m)
}
}
