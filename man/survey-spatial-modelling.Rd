% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surveys.R
\name{survey-spatial-modelling}
\alias{survey-spatial-modelling}
\alias{tidy_survey_data}
\alias{interp_survey_bathymetry}
\alias{scale_survey_predictors}
\alias{fit_glmmfields}
\alias{make_prediction_grid}
\alias{fit_spatial_survey_model}
\title{Survey spatial modelling}
\usage{
tidy_survey_data(dat, survey, years, utm_zone = 9)

interp_survey_bathymetry(dat, utm_zone = 9)

scale_survey_predictors(dat)

fit_glmmfields(dat, formula_positive = density ~ depth_scaled + depth_scaled2,
  formula_binary = present ~ depth_scaled + depth_scaled2, n_knots = 15,
  iter = 500, chains = 1, adapt_delta = 0.98,
  cores = parallel::detectCores(), ...)

make_prediction_grid(dat, bath, n = 150, region = NULL,
  cache_folder = "prediction-grids", utm_zone = 9)

fit_spatial_survey_model(dat, survey, years, chains = 3, iter = 1200,
  max_knots = 15, adapt_delta = 0.95, thin = 2, prediction_grid_n = 150,
  mcmc_posterior_samples = 150, required_obs_percent = 0.1, utm_zone = 9)
}
\arguments{
\item{dat}{TODO}

\item{survey}{TODO}

\item{years}{TODO}

\item{utm_zone}{TODO}

\item{formula_positive}{TODO}

\item{formula_binary}{TODO}

\item{n_knots}{TODO}

\item{iter}{TODO}

\item{chains}{TODO}

\item{adapt_delta}{TODO}

\item{cores}{TODO}

\item{...}{TODO}

\item{bath}{TODO}

\item{n}{TODO}

\item{region}{TODO}

\item{cache_folder}{TODO}

\item{max_knots}{TODO}

\item{thin}{TODO}

\item{prediction_grid_n}{TODO}

\item{mcmc_posterior_samples}{TODO}

\item{required_obs_percent}{TODO}
}
\description{
Long description here
}
\details{
\itemize{
\item \code{tidy_survey_data()} does...
\item \code{interp_survey_bathymetry()} does...
... TODO
}
}
\examples{
\dontrun{
## generally, use the main function:
x <- fit_spatial_survey_model(pop_surv,
  years = 2015,
  survey = "Queen Charlotte Sound Synoptic Survey",
  iter = 600, chains = 1, mcmc_posterior_samples = 100)
names(x)
print(x$models)
plot_bc_survey(x$predictions, x$data, fill_column = "combined")

## internally, fit_spatial_survey_model() does something like this:
dat <- tidy_survey_data(pop_surv,
 survey = "Queen Charlotte Sound Synoptic Survey",
 years = 2015)
dat_interp <- interp_survey_bathymetry(dat)
dat_scaled <- scale_survey_predictors(dat_interp$data)
m <- fit_glmmfields(dat_scaled)
pg <- make_prediction_grid(dat_scaled, region = "QCS")
pos <- predict(m$pos, newdata = data.frame(pg, time = 1),
 type = "response", return_mcmc = TRUE, iter = 100)
bin <- predict(m$bin, newdata = data.frame(pg, time = 1),
 type = "response", return_mcmc = TRUE, iter = 100)
com <- bin * pos
pg$combined <- apply(com, 1, median)
plot_bc_survey(pg, dat, fill_column = "combined")
}
}
\seealso{
Other spatial survey modelling functions: \code{\link{plot_bc_survey}}
}
\concept{spatial survey modelling functions}
